{"version":3,"sources":["features/CategoryManager/components/CategoryForm/index.jsx","features/CategoryManager/pages/AddPage/index.jsx","api/axiosClient.js","api/categoryApi.js"],"names":["CategoryForm","props","isAdd","initialValue","handleSubmit","onSubmit","sm","className","name","required","defaultValue","type","color","defaultProps","AddPage","useHistory","useState","message","setMessage","modal","setModal","toggle","isOpen","onClick","to","id","event","preventDefault","category","FormData","target","get","a","categoryApi","createNew","res","console","log","response","listError","data","errors","map","item","defaultMessage","save","axiosClient","axios","create","baseURL","headers","paramsSerializer","params","queryString","stringify","interceptors","request","use","config","error","findAll","post","findById","categoryId","url","update","put"],"mappings":"iMAYA,SAASA,EAAaC,GAAQ,IAClBC,EAAsCD,EAAtCC,MAAOC,EAA+BF,EAA/BE,aAAcC,EAAiBH,EAAjBG,aAC7B,OACI,cAAC,IAAD,CACIC,SAAUD,EADd,SAGI,eAAC,IAAD,WACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAKE,GAAI,GAAIC,UAAU,gCAAvB,SACI,cAAC,IAAD,uCAGR,cAAC,IAAD,CAAKA,UAAU,yBAAf,SACI,cAAC,IAAD,CAAKD,GAAI,EAAT,SACI,cAAC,IAAD,CACIE,KAAK,OACLC,UAAQ,EACRC,aAAcP,EAAaK,WAIvC,cAAC,IAAD,UACI,cAAC,IAAD,CAAKD,UAAU,gCAAf,SACI,cAAC,IAAD,CACIA,UAAU,OACVI,KAAK,SACLC,MAAOV,EAAQ,UAAY,OAH/B,SAKKA,EAAQ,mBAAa,iCA/BlDF,EAAaa,aAAe,CACxBX,OAAO,GAuCIF,O,+KCuBAc,UA9Df,SAAiBb,GAMGc,cALhB,IADoB,EAOUC,mBAAS,MAPnB,mBAObC,EAPa,KAOJC,EAPI,OAQMF,oBAAS,GARf,mBAQbG,EARa,KAQNC,EARM,KASdC,EAAS,kBAAMD,GAAUD,IAgC/B,OACI,eAAC,IAAD,WACI,eAAC,IAAD,CAAOG,OAAQH,EAAOI,QAASF,EAA/B,UACI,cAAC,IAAD,CAAaA,OAAQA,EAArB,6BACCJ,GAAW,cAAC,IAAD,UAAYA,IAExB,eAAC,IAAD,WACI,cAAC,IAAD,CAAMV,UAAU,eAAeiB,GAAG,YAAlC,2BACA,cAAC,IAAD,CAAQD,QAASF,EAAQT,MAAM,YAA/B,4BAIR,cAAC,IAAD,CACIT,aArDS,CACjBsB,GAAI,IACJjB,KAAM,IAoDEJ,aA3CS,SAACsB,GAClBA,EAAMC,iBACN,IACMC,EAAW,CACbpB,KAFS,IAAIqB,SAASH,EAAMI,QAEjBC,IAAI,UAET,uCAAG,8BAAAC,EAAA,+EAEaC,IAAYC,UAAUN,GAFnC,OAECO,EAFD,OAGLC,QAAQC,IAAI,OAAOF,GACnBjB,EAAWiB,EAAIlB,SAJV,gDAMD,KAAMqB,UACFC,EAAY,GAChB,KAAMD,SAASE,KAAKC,OAAOC,KAAI,SAAAC,GAC3BJ,EAAYA,EAAYI,EAAKC,eAAiB,SAElD1B,EAAWqB,GACXH,QAAQC,IAAIE,IAGZrB,EAAW,0CAfV,yDAAH,qDAoBV2B,GACAzB,GAAS,MAkBL,qBAAKK,GAAG,UAAUlB,UAAU,qB,+FChElCuC,EAAcC,IAAMC,OAAO,CAC7BC,QAAS,wBACTC,QAAS,CACL,eAAgB,oBAEpBC,iBAAkB,SAAAC,GAAM,OAAIC,IAAYC,UAAUF,MAItDN,EAAYS,aAAaC,QAAQC,IAAjC,+BAAAzB,EAAA,MAAqC,WAAO0B,GAAP,SAAA1B,EAAA,+EAO1B0B,GAP0B,2CAArC,uDAUAZ,EAAYS,aAAajB,SAASmB,KAAI,SAACnB,GACnC,OAAIA,GAAYA,EAASE,KACdF,EAASE,KAEbF,KACR,SAACqB,GAEA,MAAMA,KAGKb,O,gCChCf,YAEMb,EAAc,CAChB2B,QAAS,WAEL,OAAOd,IAAYf,IADP,qBAGhBG,UAAW,SAACN,GAER,OAAOkB,IAAYe,KADP,mBACiBjC,IAEjCkC,SAAU,SAACC,GACP,IAAMC,EAAG,2BAAuBD,GAChC,OAAOjB,IAAYf,IAAIiC,IAE3BC,OAAO,SAACrC,GAEJ,OAAOkB,IAAYoB,IADP,mBACetC,KAGpBK","file":"static/js/10.5b5f793a.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Col, Form, FormGroup, Input, Label, Row } from 'reactstrap';\r\n\r\nCategoryForm.propTypes = {\r\n    initialValue: PropTypes.object.isRequired,\r\n    isAdd: PropTypes.bool,\r\n    handleSubmit: PropTypes.func.isRequired,\r\n};\r\nCategoryForm.defaultProps = {\r\n    isAdd: true,\r\n}\r\nfunction CategoryForm(props) {\r\n    const { isAdd, initialValue, handleSubmit } = props\r\n    return (\r\n        <Form\r\n            onSubmit={handleSubmit}\r\n        >\r\n            <FormGroup>\r\n                <Row>\r\n                    <Col sm={12} className=\"justify-content-center d-flex\">\r\n                        <Label>Tên danh mục</Label>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"justify-content-center\">\r\n                    <Col sm={5}>\r\n                        <Input\r\n                            name=\"name\"\r\n                            required\r\n                            defaultValue={initialValue.name}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col className=\"justify-content-center d-flex\">\r\n                        <Button\r\n                            className=\"mt-3\"\r\n                            type=\"submit\"\r\n                            color={isAdd ? \"success\" : \"info\"}\r\n                        >\r\n                            {isAdd ? \"Thêm mới\" : \"Chỉnh sửa\"}\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </FormGroup>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default CategoryForm;","import React, { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Button, Container, Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\r\nimport categoryApi from '../../../../api/categoryApi';\r\nimport CategoryForm from '../../components/CategoryForm';\r\n\r\nAddPage.propTypes = {\r\n\r\n};\r\n\r\nfunction AddPage(props) {\r\n    const initialValue = {\r\n        id: 213,\r\n        name: \"\"\r\n    }\r\n\r\n    const history = useHistory();\r\n    const [message, setMessage] = useState(null);\r\n    const [modal, setModal] = useState(false);\r\n    const toggle = () => setModal(!modal);\r\n\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.target);\r\n        const category = {\r\n            name: data.get(\"name\")\r\n        }\r\n        const save = async () => {\r\n            try {\r\n                const res = await categoryApi.createNew(category);\r\n                console.log(\"res:\",res);\r\n                setMessage(res.message);\r\n            } catch (error) {\r\n                if (error.response) {\r\n                    var listError = \"\";\r\n                    error.response.data.errors.map(item => {\r\n                        listError = listError + item.defaultMessage + \". \\ \";\r\n                    })\r\n                    setMessage(listError)\r\n                    console.log(listError);\r\n                }\r\n                else {\r\n                    setMessage(\"Đã có lỗi xảy ra!\")\r\n                }\r\n\r\n            }\r\n        }\r\n        save();\r\n        setModal(true);\r\n    }\r\n    return (\r\n        <Container>\r\n            <Modal isOpen={modal} onClick={toggle} >\r\n                <ModalHeader toggle={toggle} >Thông báo</ModalHeader>\r\n                {message && <ModalBody>{message}</ModalBody>}\r\n\r\n                <ModalFooter>\r\n                    <Link className=\"btn btn-info\" to=\"/category\" >Quay lại</Link>\r\n                    <Button onClick={toggle} color=\"secondary\">Tắt</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n            <CategoryForm\r\n                initialValue={initialValue}\r\n                handleSubmit={handleSubmit}\r\n            />\r\n            <div id=\"message\" className=\"text-center\"></div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default AddPage;","import axios from 'axios';\r\nimport queryString from 'query-string';\r\n\r\nconst axiosClient = axios.create({\r\n    baseURL: 'http://localhost:8080',\r\n    headers: {\r\n        'content-type': 'application/json',\r\n    },\r\n    paramsSerializer: params => queryString.stringify(params),\r\n});\r\n\r\n\r\naxiosClient.interceptors.request.use(async (config) => {\r\n    // const currentUser = firebase.auth().currentUser;\r\n    // if (localStorage.getItem('shop1_auth')) {\r\n    //     const shop1_auth = await JSON.parse(localStorage.getItem('shop1_auth'));\r\n    //     config.headers.Authorization = `Bearer ${shop1_auth.accessToken}`;\r\n    // }\r\n    // Handle token here ...\r\n    return config;\r\n})\r\n\r\naxiosClient.interceptors.response.use((response) => {\r\n    if (response && response.data) {\r\n        return response.data;\r\n    }\r\n    return response;\r\n}, (error) => {\r\n    // Handle errors\r\n    throw error;\r\n});\r\n\r\nexport default axiosClient;","import axiosClient from \"./axiosClient\";\r\n\r\nconst categoryApi = {\r\n    findAll: () => {\r\n        const url = '/api/v1/category';\r\n        return axiosClient.get(url);\r\n    },\r\n    createNew: (category) => {\r\n        const url = \"/api/v1/category\";\r\n        return axiosClient.post(url, category);\r\n    },\r\n    findById: (categoryId) => {\r\n        const url = `/api/v1/category/${categoryId}`;\r\n        return axiosClient.get(url);\r\n    },\r\n    update:(category) => {\r\n        const url = \"/api/v1/category\";\r\n        return axiosClient.put(url,category);\r\n    }\r\n}\r\nexport default categoryApi;"],"sourceRoot":""}