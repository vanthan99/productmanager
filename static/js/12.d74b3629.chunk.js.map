{"version":3,"sources":["features/CategoryManager/pages/MainPage/index.jsx","api/axiosClient.js","api/categoryApi.js","../node_modules/reactstrap/es/Badge.js"],"names":["MainPage","props","useState","data","setData","useEffect","a","categoryApi","findAll","res","console","log","getData","to","className","map","item","name","id","render","axiosClient","axios","create","baseURL","headers","paramsSerializer","params","queryString","stringify","interceptors","request","use","config","response","error","get","createNew","category","post","findById","categoryId","url","update","put","propTypes","color","PropTypes","string","pill","bool","tag","tagPropType","innerRef","oneOfType","object","func","children","node","cssModule","Badge","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","href","React","createElement","_extends","ref","defaultProps"],"mappings":"6NA4CeA,UAlCf,SAAkBC,GAAQ,IAAD,EAEGC,mBAAS,MAFZ,mBAEdC,EAFc,KAERC,EAFQ,KAuBrB,OApBAC,qBAAU,YACO,uCAAG,4BAAAC,EAAA,+EAEUC,IAAYC,UAFtB,OAEFC,EAFE,OAGRL,EAAQK,GAHA,gDAKRC,QAAQC,IAAR,MALQ,yDAAH,qDAQbC,KACD,IAWC,eAAC,IAAD,WACI,cAAC,IAAD,CACIC,GAAG,gBACHC,UAAU,iCAFd,8BAXO,WACX,GAAa,OAATX,EACA,OAAOA,EAAKY,KAAI,SAAAC,GAAI,OACnB,cAAC,IAAD,UACG,eAAC,IAAD,WAAMA,EAAKC,KAAK,cAAC,IAAD,CAAMJ,GAAE,yBAAoBG,EAAKE,IAAjC,SAAuC,cAAC,IAAD,wCADhDF,EAAKE,OAYfC,Q,+FCpCPC,EAAcC,IAAMC,OAAO,CAC7BC,QAAS,wBACTC,QAAS,CACL,eAAgB,oBAEpBC,iBAAkB,SAAAC,GAAM,OAAIC,IAAYC,UAAUF,MAItDN,EAAYS,aAAaC,QAAQC,IAAjC,+BAAAzB,EAAA,MAAqC,WAAO0B,GAAP,SAAA1B,EAAA,+EAO1B0B,GAP0B,2CAArC,uDAUAZ,EAAYS,aAAaI,SAASF,KAAI,SAACE,GACnC,OAAIA,GAAYA,EAAS9B,KACd8B,EAAS9B,KAEb8B,KACR,SAACC,GAEA,MAAMA,KAGKd,O,gCChCf,YAEMb,EAAc,CAChBC,QAAS,WAEL,OAAOY,IAAYe,IADP,qBAGhBC,UAAW,SAACC,GAER,OAAOjB,IAAYkB,KADP,mBACiBD,IAEjCE,SAAU,SAACC,GACP,IAAMC,EAAG,2BAAuBD,GAChC,OAAOpB,IAAYe,IAAIM,IAE3BC,OAAO,SAACL,GAEJ,OAAOjB,IAAYuB,IADP,mBACeN,KAGpB9B,O,gCCpBf,0EAMIqC,EAAY,CACdC,MAAOC,IAAUC,OACjBC,KAAMF,IAAUG,KAChBC,IAAKC,cACLC,SAAUN,IAAUO,UAAU,CAACP,IAAUQ,OAAQR,IAAUS,KAAMT,IAAUC,SAC3ES,SAAUV,IAAUW,KACpB3C,UAAWgC,IAAUC,OACrBW,UAAWZ,IAAUQ,QAQnBK,EAAQ,SAAe1D,GACzB,IAAIa,EAAYb,EAAMa,UAClB4C,EAAYzD,EAAMyD,UAClBb,EAAQ5C,EAAM4C,MACdO,EAAWnD,EAAMmD,SACjBJ,EAAO/C,EAAM+C,KACbY,EAAM3D,EAAMiD,IACZW,EAAaC,YAA8B7D,EAAO,CAAC,YAAa,YAAa,QAAS,WAAY,OAAQ,QAE1G8D,EAAUC,0BAAgBC,IAAWnD,EAAW,QAAS,SAAW+B,IAAOG,GAAO,cAAuBU,GAM7G,OAJIG,EAAWK,MAAgB,SAARN,IACrBA,EAAM,KAGYO,IAAMC,cAAcR,EAAKS,YAAS,GAAIR,EAAY,CACpE/C,UAAWiD,EACXO,IAAKlB,MAITO,EAAMf,UAAYA,EAClBe,EAAMY,aA5Ba,CACjB1B,MAAO,YACPG,MAAM,EACNE,IAAK,QA0BQS","file":"static/js/12.d74b3629.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Badge, Button, Col, Container, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport categoryApi from '../../../../api/categoryApi';\r\n\r\nMainPage.propTypes = {\r\n\r\n};\r\n\r\nfunction MainPage(props) {\r\n\r\n    const [data, setData] = useState(null);\r\n    useEffect(() => {\r\n        const getData = async () => {\r\n            try {\r\n                const res = await categoryApi.findAll();\r\n                setData(res);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        getData();\r\n    }, []);\r\n    const render = () => {\r\n        if (data !== null) {\r\n            return data.map(item =>\r\n            (<Row key={item.id}>\r\n                <Col>{item.name}<Link to={`/category/edit/${item.id}`}><Badge>Chỉnh sửa</Badge></Link></Col>\r\n            </Row>)\r\n            );\r\n        }\r\n    }\r\n    return (\r\n        <Container>\r\n            <Link\r\n                to=\"/category/add\"\r\n                className=\"mt-2 btn btn-success btn-block\"\r\n            >Thêm mới</Link>\r\n            {render()}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default MainPage;","import axios from 'axios';\r\nimport queryString from 'query-string';\r\n\r\nconst axiosClient = axios.create({\r\n    baseURL: 'http://localhost:8080',\r\n    headers: {\r\n        'content-type': 'application/json',\r\n    },\r\n    paramsSerializer: params => queryString.stringify(params),\r\n});\r\n\r\n\r\naxiosClient.interceptors.request.use(async (config) => {\r\n    // const currentUser = firebase.auth().currentUser;\r\n    // if (localStorage.getItem('shop1_auth')) {\r\n    //     const shop1_auth = await JSON.parse(localStorage.getItem('shop1_auth'));\r\n    //     config.headers.Authorization = `Bearer ${shop1_auth.accessToken}`;\r\n    // }\r\n    // Handle token here ...\r\n    return config;\r\n})\r\n\r\naxiosClient.interceptors.response.use((response) => {\r\n    if (response && response.data) {\r\n        return response.data;\r\n    }\r\n    return response;\r\n}, (error) => {\r\n    // Handle errors\r\n    throw error;\r\n});\r\n\r\nexport default axiosClient;","import axiosClient from \"./axiosClient\";\r\n\r\nconst categoryApi = {\r\n    findAll: () => {\r\n        const url = '/api/v1/category';\r\n        return axiosClient.get(url);\r\n    },\r\n    createNew: (category) => {\r\n        const url = \"/api/v1/category\";\r\n        return axiosClient.post(url, category);\r\n    },\r\n    findById: (categoryId) => {\r\n        const url = `/api/v1/category/${categoryId}`;\r\n        return axiosClient.get(url);\r\n    },\r\n    update:(category) => {\r\n        const url = \"/api/v1/category\";\r\n        return axiosClient.put(url,category);\r\n    }\r\n}\r\nexport default categoryApi;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  color: PropTypes.string,\n  pill: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  color: 'secondary',\n  pill: false,\n  tag: 'span'\n};\n\nvar Badge = function Badge(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      innerRef = props.innerRef,\n      pill = props.pill,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"innerRef\", \"pill\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'badge', 'badge-' + color, pill ? 'badge-pill' : false), cssModule);\n\n  if (attributes.href && Tag === 'span') {\n    Tag = 'a';\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nBadge.propTypes = propTypes;\nBadge.defaultProps = defaultProps;\nexport default Badge;"],"sourceRoot":""}