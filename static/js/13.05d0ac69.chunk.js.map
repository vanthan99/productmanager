{"version":3,"sources":["features/ProductManager/components/ProductRow/index.jsx","features/ProductManager/components/ProductCard/index.jsx","features/ProductManager/pages/MainPage/index.jsx","api/axiosClient.js","api/productApi.js","converter/converCurrency.js"],"names":["ProductRow","ProductCard","props","product","useHistory","className","to","id","name","convert","toVND","price","quantity","category","Badge","color","MainPage","useState","productList","setProductList","page","size","filter","setFilter","totalElement","setTotalElement","useEffect","a","productApi","findAll","res","content","totalElements","console","log","getData","Container","map","item","render","Row","Col","totalItems","pageSize","onSelect","selectedPage","axiosClient","axios","create","baseURL","headers","paramsSerializer","params","queryString","stringify","interceptors","request","use","config","response","data","error","get","findByCategoryName","findById","url","save","post","update","put","input","Intl","NumberFormat","style","currency","format"],"mappings":"sNAsBeA,I,eCUAC,MAtBf,SAAqBC,GAAQ,IACjBC,EAAYD,EAAZC,QAKR,OAJgBC,cAKZ,qBAAKC,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UACI,cAAC,IAAD,CAAMC,GAAE,mBAAcH,EAAQI,IAAMF,UAAU,gCAA9C,SAAgFF,EAAQK,OACxF,oBAAGH,UAAU,YAAb,oBAA8BI,IAAQC,MAAMP,EAAQQ,UACpD,oBAAGN,UAAU,YAAb,sCAAoCF,EAAQS,YAC5C,oBAAGP,UAAU,YAAb,iCAAoCF,EAAQU,SAASL,QAErD,cAAC,IAAD,CAAMF,GAAE,wBAAmBH,EAAQI,IAAnC,SACI,cAACO,EAAA,EAAD,CAAOC,MAAM,SAAb,yC,kCC2CLC,UAvDf,SAAkBd,GAAQ,IAAD,EACiBe,mBAAS,MAD1B,mBACdC,EADc,KACDC,EADC,OAEOF,mBAAS,CACjCG,KAAM,EACNC,KAAM,KAJW,mBAEdC,EAFc,KAENC,EAFM,OAMmBN,mBAAS,IAN5B,mBAMdO,EANc,KAMAC,EANA,KAgCrB,OAlBAC,qBAAU,YACO,uCAAG,4BAAAC,EAAA,+EAEUC,IAAWC,QAAQP,GAF7B,OAEFQ,EAFE,OAGRX,EAAeW,EAAIC,SACnBN,EAAgBK,EAAIE,eAJZ,gDAMRC,QAAQC,IAAR,MANQ,yDAAH,qDASbC,KACD,CAACb,IAQA,eAACc,EAAA,EAAD,WACI,cAAC,IAAD,CAAM/B,UAAU,sCAAsCC,GAAG,eAAzD,+BACA,qBAAKD,UAAU,eAAf,SARO,WACX,GAAoB,OAAhBa,EACA,OAAOA,EAAYmB,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,CAA2BnC,QAASmC,GAAlBA,EAAK/B,OAOjDgC,KAEL,cAACH,EAAA,EAAD,UACI,cAACI,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAKpC,UAAU,gCAAf,SACI,cAAC,IAAD,CACIqC,WAAYlB,EACZmB,SAAUrB,EAAOD,KACjBuB,SArCD,SAACC,GACpBtB,EAAU,2BACHD,GADE,IAELF,KAAMyB,EAAe,MAmCLxB,KAAK,kB,+FCvD3ByB,EAAcC,IAAMC,OAAO,CAC7BC,QAAS,wBACTC,QAAS,CACL,eAAgB,oBAEpBC,iBAAkB,SAAAC,GAAM,OAAIC,IAAYC,UAAUF,MAItDN,EAAYS,aAAaC,QAAQC,IAAjC,+BAAA9B,EAAA,MAAqC,WAAO+B,GAAP,SAAA/B,EAAA,+EAO1B+B,GAP0B,2CAArC,uDAUAZ,EAAYS,aAAaI,SAASF,KAAI,SAACE,GACnC,OAAIA,GAAYA,EAASC,KACdD,EAASC,KAEbD,KACR,SAACE,GAEA,MAAMA,KAGKf,O,gCChCf,YAEMlB,EAAa,CACfC,QAAS,SAACuB,GAEN,OAAON,IAAYgB,IADP,kBACgB,CAAEV,YAElCW,mBAAoB,SAACX,GAEjB,OAAON,IAAYgB,IADP,oCACgB,CAAEV,YAElCY,SAAU,SAACZ,GACP,IAAMa,EAAG,yBAAqBb,GAC9B,OAAON,IAAYgB,IAAIG,IAE3BC,KAAM,SAAC/D,GAEH,OAAO2C,IAAYqB,KADP,iBACiBhE,IAEjCiE,OAAO,SAACjE,GAEJ,OAAO2C,IAAYuB,IADP,iBACelE,KAKpByB,O,gCC1Bf,IAAMnB,EAAU,CACZC,MAAO,SAAC4D,GACJ,OAAO,IAAIC,KAAKC,aAAa,QAAS,CAAEC,MAAO,WAAYC,SAAU,QAASC,OAAOL,KAI9E7D","file":"static/js/13.05d0ac69.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Col, Row } from 'reactstrap';\r\nimport convert from '../../../../converter/converCurrency';\r\n\r\nProductRow.propTypes = {\r\n    product: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction ProductRow(props) {\r\n    const { product } = props;\r\n    return (\r\n        <Row>\r\n            <Col sm={12}>\r\n                <p className=\"text-lead\">Tên sản phẩm: {product.name}</p>\r\n                <p>Giá bán: {convert.toVND(product.price)}</p>\r\n                <p>Số lượng: {product.quantity}</p>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default ProductRow;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport convert from '../../../../converter/converCurrency';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Badge } from 'reactstrap';\r\n\r\nProductCard.propTypes = {\r\n    product: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction ProductCard(props) {\r\n    const { product } = props;\r\n    const history = useHistory();\r\n    const handleClick = () => {\r\n        history.push(`/product/${product.id}`);\r\n    }\r\n    return (\r\n        <div className=\"card\" >\r\n            <div className=\"card-body\">\r\n                <Link to={`/product/${product.id}`} className=\"card-title nav text-secondary\" >{product.name}</Link>\r\n                <p className=\"card-text\">Giá:{convert.toVND(product.price)}</p>\r\n                <p className=\"card-text\">Số lượng: {product.quantity}</p>\r\n                <p className=\"card-text\">Thể loại: {product.category.name}</p>\r\n\r\n                <Link to={`/product/edit/${product.id}`}>\r\n                    <Badge color=\"danger\">Chỉnh sửa</Badge>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductCard;","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport ProductRow from '../../components/ProductRow';\r\nimport ProductCard from '../../components/ProductCard';\r\nimport productApi from '../../../../api/productApi';\r\nimport PaginationComponent from 'react-reactstrap-pagination';\r\nimport { Col, Container, Row } from 'reactstrap';\r\n\r\nMainPage.propTypes = {\r\n\r\n};\r\n\r\nfunction MainPage(props) {\r\n    const [productList, setProductList] = useState(null);\r\n    const [filter, setFilter] = useState({\r\n        page: 0,\r\n        size: 10\r\n    })\r\n    const [totalElement, setTotalElement] = useState(10);\r\n    const handleSelected = (selectedPage) => {\r\n        setFilter({\r\n            ...filter,\r\n            page: selectedPage - 1,\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getData = async () => {\r\n            try {\r\n                const res = await productApi.findAll(filter);\r\n                setProductList(res.content);\r\n                setTotalElement(res.totalElements);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        getData();\r\n    }, [filter]);\r\n\r\n    const render = () => {\r\n        if (productList !== null) {\r\n            return productList.map(item => <ProductCard key={item.id} product={item} />)\r\n        }\r\n    }\r\n    return (\r\n        <Container>\r\n            <Link className=\"btn mt-2 mb-2 btn-success btn-block\" to='/product/add'>Thêm mới </Link>\r\n            <div className=\"card-columns\">\r\n                {render()}\r\n            </div>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"justify-content-center d-flex\">\r\n                        <PaginationComponent\r\n                            totalItems={totalElement}\r\n                            pageSize={filter.size}\r\n                            onSelect={handleSelected}\r\n                            size=\"sm\"\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default MainPage;","import axios from 'axios';\r\nimport queryString from 'query-string';\r\n\r\nconst axiosClient = axios.create({\r\n    baseURL: 'http://localhost:8080',\r\n    headers: {\r\n        'content-type': 'application/json',\r\n    },\r\n    paramsSerializer: params => queryString.stringify(params),\r\n});\r\n\r\n\r\naxiosClient.interceptors.request.use(async (config) => {\r\n    // const currentUser = firebase.auth().currentUser;\r\n    // if (localStorage.getItem('shop1_auth')) {\r\n    //     const shop1_auth = await JSON.parse(localStorage.getItem('shop1_auth'));\r\n    //     config.headers.Authorization = `Bearer ${shop1_auth.accessToken}`;\r\n    // }\r\n    // Handle token here ...\r\n    return config;\r\n})\r\n\r\naxiosClient.interceptors.response.use((response) => {\r\n    if (response && response.data) {\r\n        return response.data;\r\n    }\r\n    return response;\r\n}, (error) => {\r\n    // Handle errors\r\n    throw error;\r\n});\r\n\r\nexport default axiosClient;","import axiosClient from \"./axiosClient\";\r\n\r\nconst productApi = {\r\n    findAll: (params) => {\r\n        const url = \"/api/v1/product\";\r\n        return axiosClient.get(url, { params });\r\n    },\r\n    findByCategoryName: (params) => {\r\n        const url = 'api/v1/product/findByCategoryName';\r\n        return axiosClient.get(url, { params });\r\n    },\r\n    findById: (params) => {\r\n        const url = `api/v1/product/${params}`;\r\n        return axiosClient.get(url);\r\n    },\r\n    save: (product) => {\r\n        const url = 'api/v1/product';\r\n        return axiosClient.post(url, product);\r\n    },\r\n    update:(product) => {\r\n        const url = 'api/v1/product';\r\n        return axiosClient.put(url,product)\r\n    }\r\n}\r\n\r\n\r\nexport default productApi;","const convert = {\r\n    toVND: (input) => {\r\n        return new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(input);\r\n    }\r\n}\r\n\r\nexport default convert;\r\n\r\n\r\n"],"sourceRoot":""}