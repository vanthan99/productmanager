{"version":3,"sources":["features/ProductManager/components/ProductForm/index.jsx","features/ProductManager/pages/EditPage/index.jsx","api/axiosClient.js","api/categoryApi.js","api/productApi.js"],"names":["ProductForm","props","isAdd","categorySelected","product","categoryOptions","handleSubmit","initialValue","className","onSubmit","row","sm","type","name","id","placeholder","required","defaultValue","addonType","min","max","price","quantity","options","defaultProps","value","label","EditPage","productId","useParams","useState","setProduct","categories","setCategories","modal","setModal","toggle","message","setMessage","event","preventDefault","data","FormData","target","get","category","find","cat","a","productApi","update","res","console","log","useEffect","getProduct","findById","getCategories","categoryApi","findAll","isOpen","onClick","to","color","map","item","push","renderForm","axiosClient","axios","create","baseURL","headers","paramsSerializer","params","queryString","stringify","interceptors","request","use","config","response","error","createNew","post","categoryId","url","put","findByCategoryName","save"],"mappings":"yNA8BA,SAASA,EAAYC,GAAQ,IACjBC,EAAkFD,EAAlFC,MAAgBC,GAAkEF,EAA3EG,QAA2EH,EAAlEE,kBAAkBE,EAAgDJ,EAAhDI,gBAAiBC,EAA+BL,EAA/BK,aAAcC,EAAiBN,EAAjBM,aACzE,OACI,qBAAKC,UAAU,YAAf,SACI,eAAC,IAAD,CACIC,SAAUH,EADd,UAGI,cAAC,IAAD,IAEA,eAAC,IAAD,CAAWI,KAAG,EAAd,UACI,eAAC,IAAD,CAAKC,GAAI,EAAT,UACI,cAAC,IAAD,wCACA,cAAC,IAAD,CACIC,KAAK,OACLC,KAAK,OACLC,GAAG,GACHC,YAAY,yBACZC,UAAQ,EACRC,aAAcV,EAAaM,UAGnC,eAAC,IAAD,CAAKF,GAAI,EAAT,UACI,cAAC,IAAD,qBAEA,eAAC,IAAD,CAAiBO,UAAU,UAA3B,UACI,cAAC,IAAD,CACIN,KAAK,SACLC,KAAK,QACLC,GAAG,GACHC,YAAY,0BACZI,IAAK,IACLC,IAAK,SACLJ,UAAQ,EACRC,aAAcV,EAAac,QAE/B,cAAC,IAAD,6BAGR,eAAC,IAAD,CAAKV,GAAI,EAAT,UACI,cAAC,IAAD,sCACA,cAAC,IAAD,CACIC,KAAK,SACLC,KAAK,WACLC,GAAG,GACHC,YAAY,4BACZC,UAAQ,EACRG,IAAK,GACLC,IAAK,OACLH,aAAcV,EAAae,iBAIvC,eAAC,IAAD,CAAWZ,KAAG,EAAd,UACI,eAAC,IAAD,CAAKC,GAAI,EAAT,UACI,cAAC,IAAD,oDACA,cAAC,IAAD,CACIE,KAAK,WACLU,QAASlB,EACTY,aAAcd,OAGtB,cAAC,IAAD,CAAKQ,GAAI,EAAGH,UAAU,yBAAtB,SACI,cAAC,IAAD,UAASN,EAAQ,mBAAa,iCAtEtDF,EAAYwB,aAAe,CACvBtB,OAAO,EACPG,gBAAiB,GACjBF,iBAAkB,CACdsB,MAAO,GACPC,MAAO,uBAyEA1B,O,qMCwBA2B,UAhHf,SAAkB1B,GAAO,IAsBb2B,EAAcC,cAAdD,UAtBa,EAuBSE,mBAAS,MAvBlB,mBAuBd1B,EAvBc,KAuBL2B,EAvBK,OAwBeD,mBAAS,MAxBxB,mBAwBdE,EAxBc,KAwBFC,EAxBE,OAyBKH,oBAAS,GAzBd,mBAyBdI,EAzBc,KAyBPC,EAzBO,KA0BfC,EAAS,kBAAMD,GAAUD,IA1BV,EA2BSJ,mBAAS,MA3BlB,mBA2BdO,EA3Bc,KA2BLC,EA3BK,KA6BfhC,EAAe,SAACiC,GAClBA,EAAMC,iBACN,IAAMC,EAAO,IAAIC,SAASH,EAAMI,QAC1BvC,EAAU,CACZU,GAAIc,EACJf,KAAM4B,EAAKG,IAAI,QACfvB,MAAOoB,EAAKG,IAAI,SAChBtB,SAAUmB,EAAKG,IAAI,YACnBC,SAAUb,EAAWc,MAAK,SAAAC,GAAG,OAAIA,EAAIjC,KAAO2B,EAAKG,IAAI,iBAG7C,uCAAG,4BAAAI,EAAA,+EAEWC,IAAWC,OAAO9C,GAF7B,OAED+C,EAFC,OAGPb,EAAWa,EAAId,SAHR,gDAKPe,QAAQC,IAAR,MACAf,EAAW,mCANJ,yDAAH,qDASZY,GACAf,GAAS,IA+Cb,OA3CAmB,qBAAU,WACN,IAAMC,EAAU,uCAAG,4BAAAP,EAAA,+EAEOC,IAAWO,SAAS5B,GAF3B,OAELuB,EAFK,OAGXpB,EAAWoB,GAHA,gDAKXC,QAAQC,IAAR,MALW,yDAAH,qDAQVI,EAAa,uCAAG,4BAAAT,EAAA,+EAEIU,IAAYC,UAFhB,OAERR,EAFQ,OAGdlB,EAAckB,GAHA,gDAKdC,QAAQC,IAAR,MALc,yDAAH,qDAQnBE,IACAE,MACD,IAyBC,gCAEI,eAAC,IAAD,CAAOG,OAAQ1B,EAAO2B,QAASzB,EAA/B,UACI,cAAC,IAAD,CAAaA,OAAQA,EAArB,6BACa,OAAZC,EAAmB,cAAC,IAAD,UAAYA,IAAuB,GACvD,eAAC,IAAD,WACI,cAAC,IAAD,CAAM7B,UAAU,eAAesD,GAAG,WAAlC,wCACA,cAAC,IAAD,CAAQD,QAASzB,EAAQ2B,MAAM,YAA/B,4BA9BG,WACf,GAAgB,OAAZ3D,GAAmC,OAAf4B,EAAqB,CACzC,IAAM3B,EAAkB,GACxB2B,EAAWgC,KAAI,SAAAC,GACX5D,EAAgB6D,KAAK,CACjBzC,MAAOwC,EAAKnD,GACZY,MAAOuC,EAAKpD,UAGpB,IAAMV,EAAmB,CACrBsB,MAAOrB,EAAQyC,SAAS/B,GACxBY,MAAOtB,EAAQyC,SAAShC,MAE5B,OAAO,cAAC,IAAD,CACHX,OAAO,EACPG,gBAAiBA,EACjBF,iBAAkBA,EAClBI,aAAcH,EACdE,aAAcA,KAejB6D,Q,+FCrHPC,EAAcC,IAAMC,OAAO,CAC7BC,QAAS,wBACTC,QAAS,CACL,eAAgB,oBAEpBC,iBAAkB,SAAAC,GAAM,OAAIC,IAAYC,UAAUF,MAItDN,EAAYS,aAAaC,QAAQC,IAAjC,+BAAA/B,EAAA,MAAqC,WAAOgC,GAAP,SAAAhC,EAAA,+EAO1BgC,GAP0B,2CAArC,uDAUAZ,EAAYS,aAAaI,SAASF,KAAI,SAACE,GACnC,OAAIA,GAAYA,EAASxC,KACdwC,EAASxC,KAEbwC,KACR,SAACC,GAEA,MAAMA,KAGKd,O,gCChCf,YAEMV,EAAc,CAChBC,QAAS,WAEL,OAAOS,IAAYxB,IADP,qBAGhBuC,UAAW,SAACtC,GAER,OAAOuB,IAAYgB,KADP,mBACiBvC,IAEjCW,SAAU,SAAC6B,GACP,IAAMC,EAAG,2BAAuBD,GAChC,OAAOjB,IAAYxB,IAAI0C,IAE3BpC,OAAO,SAACL,GAEJ,OAAOuB,IAAYmB,IADP,mBACe1C,KAGpBa,O,gCCpBf,YAEMT,EAAa,CACfU,QAAS,SAACe,GAEN,OAAON,IAAYxB,IADP,kBACgB,CAAE8B,YAElCc,mBAAoB,SAACd,GAEjB,OAAON,IAAYxB,IADP,oCACgB,CAAE8B,YAElClB,SAAU,SAACkB,GACP,IAAMY,EAAG,yBAAqBZ,GAC9B,OAAON,IAAYxB,IAAI0C,IAE3BG,KAAM,SAACrF,GAEH,OAAOgE,IAAYgB,KADP,iBACiBhF,IAEjC8C,OAAO,SAAC9C,GAEJ,OAAOgE,IAAYmB,IADP,iBACenF,KAKpB6C","file":"static/js/9.189817df.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {\r\n    Button,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Col,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n} from 'reactstrap';\r\nimport Select from 'react-select';\r\nimport \"./productform.css\";\r\nProductForm.propTypes = {\r\n    initialValue: PropTypes.object.isRequired,\r\n    isAdd: PropTypes.bool,\r\n    categorySelected: PropTypes.object,\r\n    categoryOptions: PropTypes.array,\r\n    handleSubmit: PropTypes.func.isRequired,\r\n};\r\nProductForm.defaultProps = {\r\n    isAdd: true,\r\n    categoryOptions: [],\r\n    categorySelected: {\r\n        value: \"\",\r\n        label: \"Enter category ...\",\r\n    }\r\n}\r\nfunction ProductForm(props) {\r\n    const { isAdd, product, categorySelected, categoryOptions, handleSubmit, initialValue } = props;\r\n    return (\r\n        <div className=\"container\">\r\n            <Form\r\n                onSubmit={handleSubmit}\r\n            >\r\n                <FormGroup>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Col sm={4}>\r\n                        <Label>Tên sản phẩm</Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            id=\"\"\r\n                            placeholder=\"Enter product name ...\"\r\n                            required\r\n                            defaultValue={initialValue.name}\r\n                        />\r\n                    </Col>\r\n                    <Col sm={4}>\r\n                        <Label>Giá</Label>\r\n\r\n                        <InputGroupAddon addonType=\"prepend\">\r\n                            <Input\r\n                                type=\"number\"\r\n                                name=\"price\"\r\n                                id=\"\"\r\n                                placeholder=\"Enter product price ...\"\r\n                                min={10000}\r\n                                max={99999999}\r\n                                required\r\n                                defaultValue={initialValue.price}\r\n                            />\r\n                            <InputGroupText>VNĐ</InputGroupText>\r\n                        </InputGroupAddon>\r\n                    </Col>\r\n                    <Col sm={4}>\r\n                        <Label>Số lượng</Label>\r\n                        <Input\r\n                            type=\"number\"\r\n                            name=\"quantity\"\r\n                            id=\"\"\r\n                            placeholder=\"Enter product quantity...\"\r\n                            required\r\n                            min={10}\r\n                            max={999999}\r\n                            defaultValue={initialValue.quantity}\r\n                        />\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Col sm={4}>\r\n                        <Label>Thể loại sản phẩm</Label>\r\n                        <Select\r\n                            name=\"category\"\r\n                            options={categoryOptions}\r\n                            defaultValue={categorySelected}\r\n                        />\r\n                    </Col>\r\n                    <Col sm={4} className=\"d-flex align-items-end\">\r\n                        <Button>{isAdd ? \"Thêm mới\" : \"Cập nhật\"}</Button>\r\n                    </Col>\r\n                </FormGroup>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductForm;","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ProductForm from '../../components/ProductForm';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport productApi from '../../../../api/productApi';\r\nimport categoryApi from '../../../../api/categoryApi';\r\nimport { Button, Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\r\n\r\nEditPage.propTypes = {\r\n\r\n};\r\n\r\nfunction EditPage(props) {\r\n    // const categoryOptions = [\r\n    //     {\r\n    //         value: 1,\r\n    //         label: 1\r\n    //     },\r\n    //     {\r\n    //         value: 2,\r\n    //         label: 2\r\n    //     },\r\n    //     {\r\n    //         value: 3,\r\n    //         label: 3\r\n    //     },\r\n    //     {\r\n    //         value: 4,\r\n    //         label: 4\r\n    //     },\r\n\r\n    // ]\r\n\r\n    // const categorySelected = categoryOptions.find(item => item.value === 2);\r\n    const { productId } = useParams();\r\n    const [product, setProduct] = useState(null);\r\n    const [categories, setCategories] = useState(null);\r\n    const [modal, setModal] = useState(false);\r\n    const toggle = () => setModal(!modal);\r\n    const [message, setMessage] = useState(null);\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.target);\r\n        const product = {\r\n            id: productId,\r\n            name: data.get('name'),\r\n            price: data.get('price'),\r\n            quantity: data.get('quantity'),\r\n            category: categories.find(cat => cat.id === data.get('category'))\r\n        }\r\n\r\n        const update = async () => {\r\n            try {\r\n                const res = await productApi.update(product);\r\n                setMessage(res.message);\r\n            } catch (error) {\r\n                console.log(error);\r\n                setMessage(\"Đã xảy ra lỗi\");\r\n            }\r\n        }\r\n        update();\r\n        setModal(true);\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getProduct = async () => {\r\n            try {\r\n                const res = await productApi.findById(productId);\r\n                setProduct(res);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        const getCategories = async () => {\r\n            try {\r\n                const res = await categoryApi.findAll();\r\n                setCategories(res);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        getProduct();\r\n        getCategories();\r\n    }, [])\r\n\r\n    const renderForm = () => {\r\n        if (product !== null && categories !== null) {\r\n            const categoryOptions = [];\r\n            categories.map(item => {\r\n                categoryOptions.push({\r\n                    value: item.id,\r\n                    label: item.name\r\n                })\r\n            })\r\n            const categorySelected = {\r\n                value: product.category.id,\r\n                label: product.category.name,\r\n            }\r\n            return <ProductForm\r\n                isAdd={false}\r\n                categoryOptions={categoryOptions}\r\n                categorySelected={categorySelected}\r\n                initialValue={product}\r\n                handleSubmit={handleSubmit}\r\n            />\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n\r\n            <Modal isOpen={modal} onClick={toggle} >\r\n                <ModalHeader toggle={toggle} >Thông báo</ModalHeader>\r\n                {message !== null ? <ModalBody>{message}</ModalBody> : \"\"}\r\n                <ModalFooter>\r\n                    <Link className=\"btn btn-info\" to=\"/product\" >Quay lại danh sách</Link>\r\n                    <Button onClick={toggle} color=\"secondary\">Tắt</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n            {renderForm()}\r\n        </div>\r\n    );\r\n}\r\nexport default EditPage;","import axios from 'axios';\r\nimport queryString from 'query-string';\r\n\r\nconst axiosClient = axios.create({\r\n    baseURL: 'http://localhost:8080',\r\n    headers: {\r\n        'content-type': 'application/json',\r\n    },\r\n    paramsSerializer: params => queryString.stringify(params),\r\n});\r\n\r\n\r\naxiosClient.interceptors.request.use(async (config) => {\r\n    // const currentUser = firebase.auth().currentUser;\r\n    // if (localStorage.getItem('shop1_auth')) {\r\n    //     const shop1_auth = await JSON.parse(localStorage.getItem('shop1_auth'));\r\n    //     config.headers.Authorization = `Bearer ${shop1_auth.accessToken}`;\r\n    // }\r\n    // Handle token here ...\r\n    return config;\r\n})\r\n\r\naxiosClient.interceptors.response.use((response) => {\r\n    if (response && response.data) {\r\n        return response.data;\r\n    }\r\n    return response;\r\n}, (error) => {\r\n    // Handle errors\r\n    throw error;\r\n});\r\n\r\nexport default axiosClient;","import axiosClient from \"./axiosClient\";\r\n\r\nconst categoryApi = {\r\n    findAll: () => {\r\n        const url = '/api/v1/category';\r\n        return axiosClient.get(url);\r\n    },\r\n    createNew: (category) => {\r\n        const url = \"/api/v1/category\";\r\n        return axiosClient.post(url, category);\r\n    },\r\n    findById: (categoryId) => {\r\n        const url = `/api/v1/category/${categoryId}`;\r\n        return axiosClient.get(url);\r\n    },\r\n    update:(category) => {\r\n        const url = \"/api/v1/category\";\r\n        return axiosClient.put(url,category);\r\n    }\r\n}\r\nexport default categoryApi;","import axiosClient from \"./axiosClient\";\r\n\r\nconst productApi = {\r\n    findAll: (params) => {\r\n        const url = \"/api/v1/product\";\r\n        return axiosClient.get(url, { params });\r\n    },\r\n    findByCategoryName: (params) => {\r\n        const url = 'api/v1/product/findByCategoryName';\r\n        return axiosClient.get(url, { params });\r\n    },\r\n    findById: (params) => {\r\n        const url = `api/v1/product/${params}`;\r\n        return axiosClient.get(url);\r\n    },\r\n    save: (product) => {\r\n        const url = 'api/v1/product';\r\n        return axiosClient.post(url, product);\r\n    },\r\n    update:(product) => {\r\n        const url = 'api/v1/product';\r\n        return axiosClient.put(url,product)\r\n    }\r\n}\r\n\r\n\r\nexport default productApi;"],"sourceRoot":""}