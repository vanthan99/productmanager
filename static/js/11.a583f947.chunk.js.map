{"version":3,"sources":["features/CategoryManager/components/CategoryForm/index.jsx","features/CategoryManager/pages/EditPage/index.jsx","api/axiosClient.js","api/categoryApi.js"],"names":["CategoryForm","props","isAdd","initialValue","handleSubmit","onSubmit","sm","className","name","required","defaultValue","type","color","defaultProps","EditPage","categoryId","useParams","useState","category","setCategory","message","setMessage","modal","setModal","toggle","useEffect","a","categoryApi","findById","res","console","log","getData","isOpen","onClick","to","id","event","preventDefault","data","FormData","target","get","update","axiosClient","axios","create","baseURL","headers","paramsSerializer","params","queryString","stringify","interceptors","request","use","config","response","error","findAll","createNew","post","url","put"],"mappings":"iMAYA,SAASA,EAAaC,GAAQ,IAClBC,EAAsCD,EAAtCC,MAAOC,EAA+BF,EAA/BE,aAAcC,EAAiBH,EAAjBG,aAC7B,OACI,cAAC,IAAD,CACIC,SAAUD,EADd,SAGI,eAAC,IAAD,WACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAKE,GAAI,GAAIC,UAAU,gCAAvB,SACI,cAAC,IAAD,uCAGR,cAAC,IAAD,CAAKA,UAAU,yBAAf,SACI,cAAC,IAAD,CAAKD,GAAI,EAAT,SACI,cAAC,IAAD,CACIE,KAAK,OACLC,UAAQ,EACRC,aAAcP,EAAaK,WAIvC,cAAC,IAAD,UACI,cAAC,IAAD,CAAKD,UAAU,gCAAf,SACI,cAAC,IAAD,CACIA,UAAU,OACVI,KAAK,SACLC,MAAOV,EAAQ,UAAY,OAH/B,SAKKA,EAAQ,mBAAa,iCA/BlDF,EAAaa,aAAe,CACxBX,OAAO,GAuCIF,O,+KCgCAc,UAtEf,SAAkBb,GAEd,IAKQc,EAAeC,cAAfD,WAPa,EAQWE,mBAAS,MARpB,mBAQdC,EARc,KAQJC,EARI,OASSF,mBAAS,MATlB,mBASdG,EATc,KASLC,EATK,OAUKJ,oBAAS,GAVd,mBAUdK,EAVc,KAUPC,EAVO,KAWfC,EAAS,kBAAMD,GAAUD,IAmC/B,OAjCAG,qBAAU,YACO,uCAAG,4BAAAC,EAAA,+EAEUC,IAAYC,SAASb,GAF/B,OAEFc,EAFE,OAGRV,EAAYU,GAHJ,gDAKRC,QAAQC,IAAR,MALQ,yDAAH,qDAQbC,KACD,IAwBC,eAAC,IAAD,WAEI,eAAC,IAAD,CAAOC,OAAQX,EAAOY,QAASV,EAA/B,UACI,cAAC,IAAD,CAAaA,OAAQA,EAArB,6BACa,OAAZJ,EAAmB,cAAC,IAAD,UAAYA,IAAuB,GACvD,eAAC,IAAD,WACI,cAAC,IAAD,CAAMb,UAAU,eAAe4B,GAAG,YAAlC,wCACA,cAAC,IAAD,CAAQD,QAASV,EAAQZ,MAAM,YAA/B,4BAIR,cAAC,IAAD,CACIT,aAA2B,OAAbe,EAAoBA,EAAW,CACzCkB,GAAI,KACJ5B,KAAM,IAEVJ,aApCS,SAACiC,GAClBA,EAAMC,iBACN,IAAMC,EAAO,IAAIC,SAASH,EAAMI,QAC1BvB,EAAW,CACbkB,GAAIrB,EACJP,KAAM+B,EAAKG,IAAI,UAEP,uCAAG,4BAAAhB,EAAA,+EAEWC,IAAYgB,OAAOzB,GAF9B,OAEDW,EAFC,OAGPR,EAAWQ,EAAIT,SAHR,gDAKPU,QAAQC,IAAR,MACAV,EAAW,6DANJ,yDAAH,qDASZsB,GACApB,GAAS,IAoBDrB,OAAO,S,+FCxEjB0C,EAAcC,IAAMC,OAAO,CAC7BC,QAAS,wBACTC,QAAS,CACL,eAAgB,oBAEpBC,iBAAkB,SAAAC,GAAM,OAAIC,IAAYC,UAAUF,MAItDN,EAAYS,aAAaC,QAAQC,IAAjC,+BAAA7B,EAAA,MAAqC,WAAO8B,GAAP,SAAA9B,EAAA,+EAO1B8B,GAP0B,2CAArC,uDAUAZ,EAAYS,aAAaI,SAASF,KAAI,SAACE,GACnC,OAAIA,GAAYA,EAASlB,KACdkB,EAASlB,KAEbkB,KACR,SAACC,GAEA,MAAMA,KAGKd,O,gCChCf,YAEMjB,EAAc,CAChBgC,QAAS,WAEL,OAAOf,IAAYF,IADP,qBAGhBkB,UAAW,SAAC1C,GAER,OAAO0B,IAAYiB,KADP,mBACiB3C,IAEjCU,SAAU,SAACb,GACP,IAAM+C,EAAG,2BAAuB/C,GAChC,OAAO6B,IAAYF,IAAIoB,IAE3BnB,OAAO,SAACzB,GAEJ,OAAO0B,IAAYmB,IADP,mBACe7C,KAGpBS","file":"static/js/11.a583f947.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Col, Form, FormGroup, Input, Label, Row } from 'reactstrap';\r\n\r\nCategoryForm.propTypes = {\r\n    initialValue: PropTypes.object.isRequired,\r\n    isAdd: PropTypes.bool,\r\n    handleSubmit: PropTypes.func.isRequired,\r\n};\r\nCategoryForm.defaultProps = {\r\n    isAdd: true,\r\n}\r\nfunction CategoryForm(props) {\r\n    const { isAdd, initialValue, handleSubmit } = props\r\n    return (\r\n        <Form\r\n            onSubmit={handleSubmit}\r\n        >\r\n            <FormGroup>\r\n                <Row>\r\n                    <Col sm={12} className=\"justify-content-center d-flex\">\r\n                        <Label>Tên danh mục</Label>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"justify-content-center\">\r\n                    <Col sm={5}>\r\n                        <Input\r\n                            name=\"name\"\r\n                            required\r\n                            defaultValue={initialValue.name}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col className=\"justify-content-center d-flex\">\r\n                        <Button\r\n                            className=\"mt-3\"\r\n                            type=\"submit\"\r\n                            color={isAdd ? \"success\" : \"info\"}\r\n                        >\r\n                            {isAdd ? \"Thêm mới\" : \"Chỉnh sửa\"}\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </FormGroup>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default CategoryForm;","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Container, Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\r\nimport CategoryForm from '../../components/CategoryForm';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport categoryApi from '../../../../api/categoryApi';\r\n\r\nEditPage.propTypes = {\r\n\r\n};\r\n\r\nfunction EditPage(props) {\r\n\r\n    const initialValue = {\r\n        id: 234,\r\n        name: \"Chó Husky\",\r\n    }\r\n\r\n    const { categoryId } = useParams();\r\n    const [category, setCategory] = useState(null);\r\n    const [message, setMessage] = useState(null);\r\n    const [modal, setModal] = useState(false);\r\n    const toggle = () => setModal(!modal);\r\n    // get current data\r\n    useEffect(() => {\r\n        const getData = async () => {\r\n            try {\r\n                const res = await categoryApi.findById(categoryId);\r\n                setCategory(res);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        getData();\r\n    }, []);\r\n\r\n\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.target);\r\n        const category = {\r\n            id: categoryId,\r\n            name: data.get(\"name\")\r\n        }\r\n        const update = async () => {\r\n            try {\r\n                const res = await categoryApi.update(category);\r\n                setMessage(res.message);\r\n            } catch (error) {\r\n                console.log(error);\r\n                setMessage(\"Đã xảy ra lỗi! Hãy thử lại\");\r\n            }\r\n        }\r\n        update();\r\n        setModal(true);\r\n    }\r\n    return (\r\n        <Container>\r\n\r\n            <Modal isOpen={modal} onClick={toggle} >\r\n                <ModalHeader toggle={toggle} >Thông báo</ModalHeader>\r\n                {message !== null ? <ModalBody>{message}</ModalBody> : \"\"}\r\n                <ModalFooter>\r\n                    <Link className=\"btn btn-info\" to=\"/category\" >Quay lại danh sách</Link>\r\n                    <Button onClick={toggle} color=\"secondary\">Tắt</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n            <CategoryForm\r\n                initialValue={category !== null ? category : {\r\n                    id: null,\r\n                    name: \"\"\r\n                }}\r\n                handleSubmit={handleSubmit}\r\n                isAdd={false}\r\n            />\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default EditPage;","import axios from 'axios';\r\nimport queryString from 'query-string';\r\n\r\nconst axiosClient = axios.create({\r\n    baseURL: 'http://localhost:8080',\r\n    headers: {\r\n        'content-type': 'application/json',\r\n    },\r\n    paramsSerializer: params => queryString.stringify(params),\r\n});\r\n\r\n\r\naxiosClient.interceptors.request.use(async (config) => {\r\n    // const currentUser = firebase.auth().currentUser;\r\n    // if (localStorage.getItem('shop1_auth')) {\r\n    //     const shop1_auth = await JSON.parse(localStorage.getItem('shop1_auth'));\r\n    //     config.headers.Authorization = `Bearer ${shop1_auth.accessToken}`;\r\n    // }\r\n    // Handle token here ...\r\n    return config;\r\n})\r\n\r\naxiosClient.interceptors.response.use((response) => {\r\n    if (response && response.data) {\r\n        return response.data;\r\n    }\r\n    return response;\r\n}, (error) => {\r\n    // Handle errors\r\n    throw error;\r\n});\r\n\r\nexport default axiosClient;","import axiosClient from \"./axiosClient\";\r\n\r\nconst categoryApi = {\r\n    findAll: () => {\r\n        const url = '/api/v1/category';\r\n        return axiosClient.get(url);\r\n    },\r\n    createNew: (category) => {\r\n        const url = \"/api/v1/category\";\r\n        return axiosClient.post(url, category);\r\n    },\r\n    findById: (categoryId) => {\r\n        const url = `/api/v1/category/${categoryId}`;\r\n        return axiosClient.get(url);\r\n    },\r\n    update:(category) => {\r\n        const url = \"/api/v1/category\";\r\n        return axiosClient.put(url,category);\r\n    }\r\n}\r\nexport default categoryApi;"],"sourceRoot":""}